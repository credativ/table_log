CREATE EXTENSION table_log;
SET client_min_messages TO warning;
-- drop old trigger
DROP TRIGGER test_log_chg ON test; -- ignore any error
ERROR:  relation "test" does not exist
-- create demo table
DROP TABLE test; -- ignore any error
ERROR:  table "test" does not exist
CREATE TABLE test (
  id                    INT                 NOT NULL
                                            PRIMARY KEY,
  name                  VARCHAR(20)         NOT NULL
);
-- create the table without data from demo table
DROP TABLE test_log; -- ignore any error
ERROR:  table "test_log" does not exist
SELECT * INTO test_log FROM test LIMIT 0;
ALTER TABLE test_log ADD COLUMN trigger_mode VARCHAR(10);
ALTER TABLE test_log ADD COLUMN trigger_tuple VARCHAR(5);
ALTER TABLE test_log ADD COLUMN trigger_changed TIMESTAMPTZ;
ALTER TABLE test_log ADD COLUMN trigger_id BIGINT;
CREATE SEQUENCE test_log_id;
SELECT SETVAL('test_log_id', 1, FALSE);
 setval 
--------
      1
(1 row)

ALTER TABLE test_log ALTER COLUMN trigger_id SET DEFAULT NEXTVAL('test_log_id');
-- create trigger
CREATE TRIGGER test_log_chg AFTER UPDATE OR INSERT OR DELETE ON test FOR EACH ROW
               EXECUTE PROCEDURE table_log();
-- test trigger
INSERT INTO test VALUES (1, 'name');
SELECT id, name FROM test;
 id | name 
----+------
  1 | name
(1 row)

SELECT id, name, trigger_mode, trigger_tuple, trigger_id FROM test_log;
 id | name | trigger_mode | trigger_tuple | trigger_id 
----+------+--------------+---------------+------------
  1 | name | INSERT       | new           |          1
(1 row)

UPDATE test SET name='other name' WHERE id=1;
SELECT id, name FROM test;
 id |    name    
----+------------
  1 | other name
(1 row)

SELECT id, name, trigger_mode, trigger_tuple, trigger_id FROM test_log;
 id |    name    | trigger_mode | trigger_tuple | trigger_id 
----+------------+--------------+---------------+------------
  1 | name       | INSERT       | new           |          1
  1 | name       | UPDATE       | old           |          2
  1 | other name | UPDATE       | new           |          3
(3 rows)

-- create restore table
SELECT table_log_restore_table('test', 'id', 'test_log', 'trigger_id', 'test_recover', NOW());
 table_log_restore_table 
-------------------------
 test_recover
(1 row)

SELECT id, name FROM test_recover;
 id |    name    
----+------------
  1 | other name
(1 row)

DROP TABLE test;
DROP TABLE test_log;
DROP TABLE test_recover;
-- test table_log_init with all arguments
-- trigger_user and trigger_changed might differ, so ignore it
SET client_min_messages TO warning;
CREATE TABLE test(id integer, name text);
SELECT table_log_init(5, 'test');
 table_log_init 
----------------
 
(1 row)

INSERT INTO test VALUES(1, 'joe');
INSERT INTO test VALUES(2, 'barney');
INSERT INTO test VALUES(3, 'monica');
UPDATE test SET name = 'veronica' WHERE id = 3;
DELETE FROM test WHERE id = 1;
SELECT id, name, trigger_mode, trigger_tuple, trigger_id FROM test_log;
 id |   name   | trigger_mode | trigger_tuple | trigger_id 
----+----------+--------------+---------------+------------
  1 | joe      | INSERT       | new           |          1
  2 | barney   | INSERT       | new           |          2
  3 | monica   | INSERT       | new           |          3
  3 | monica   | UPDATE       | old           |          4
  3 | veronica | UPDATE       | new           |          5
  1 | joe      | DELETE       | old           |          6
(6 rows)

DROP TABLE test;
DROP TABLE test_log;
CREATE TABLE test(id integer, name text);
SELECT table_log_init(4, 'test');
 table_log_init 
----------------
 
(1 row)

INSERT INTO test VALUES(1, 'joe');
INSERT INTO test VALUES(2, 'barney');
INSERT INTO test VALUES(3, 'monica');
UPDATE test SET name = 'veronica' WHERE id = 3;
DELETE FROM test WHERE id = 1;
SELECT id, name, trigger_mode, trigger_tuple, trigger_id FROM test_log;
 id |   name   | trigger_mode | trigger_tuple | trigger_id 
----+----------+--------------+---------------+------------
  1 | joe      | INSERT       | new           |          1
  2 | barney   | INSERT       | new           |          2
  3 | monica   | INSERT       | new           |          3
  3 | monica   | UPDATE       | old           |          4
  3 | veronica | UPDATE       | new           |          5
  1 | joe      | DELETE       | old           |          6
(6 rows)

DROP TABLE test;
DROP TABLE test_log;
CREATE TABLE test(id integer, name text);
SELECT table_log_init(3, 'test');
 table_log_init 
----------------
 
(1 row)

INSERT INTO test VALUES(1, 'joe');
INSERT INTO test VALUES(2, 'barney');
INSERT INTO test VALUES(3, 'monica');
UPDATE test SET name = 'veronica' WHERE id = 3;
DELETE FROM test WHERE id = 1;
SELECT id, name, trigger_mode, trigger_tuple FROM test_log;
 id |   name   | trigger_mode | trigger_tuple 
----+----------+--------------+---------------
  1 | joe      | INSERT       | new
  2 | barney   | INSERT       | new
  3 | monica   | INSERT       | new
  3 | monica   | UPDATE       | old
  3 | veronica | UPDATE       | new
  1 | joe      | DELETE       | old
(6 rows)

DROP TABLE test;
DROP TABLE test_log;
-- Check table_log_restore_table()
CREATE TABLE test(id integer, name text);
ALTER TABLE test ADD PRIMARY KEY(id);
SELECT table_log_init(5, 'test');
 table_log_init 
----------------
 
(1 row)

INSERT INTO test VALUES(1, 'joe');
INSERT INTO test VALUES(2, 'barney');
INSERT INTO test VALUES(3, 'monica');
UPDATE test SET name = 'veronica' WHERE id = 3;
DELETE FROM test WHERE id = 1;
SELECT table_log_restore_table('test', 'id', 'test_log', 'trigger_id', 'test_recover', NOW(), '2', NULL::int, 1);
 table_log_restore_table 
-------------------------
 test_recover
(1 row)

SELECT id, name FROM test_recover;
 id |  name  
----+--------
  2 | barney
(1 row)

DROP TABLE test;
DROP TABLE test_log;
DROP TABLE test_recover;
RESET client_min_messages;
